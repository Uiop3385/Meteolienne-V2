// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char PASS[]     = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)

void onCommandPromptChange();
void onLedChange();
void onDirectionChange();
void onLedDisplayOptionChange();
void onMinWakeTimeChange();
void onSleepDurationChange();
void onDisableWiFiChange();
void onKeepAwakeChange();

String commandPrompt;
CloudColoredLight led;
CloudIlluminance luminosite;
int co2;
int direction;
int ledDisplayOption;
int minWakeTime;
int sleepDuration;
int uv;
CloudLength altitude;
CloudLocation position;
CloudPercentage batterie;
CloudRelativeHumidity humidite;
CloudPressure pression;
bool disableWiFi;
bool isAwake;
bool keepAwake;
CloudTemperature temperature;
CloudTime sleepStartTime;

void initProperties(){

  ArduinoCloud.addProperty(commandPrompt, READWRITE, ON_CHANGE, onCommandPromptChange);
  ArduinoCloud.addProperty(led, READWRITE, ON_CHANGE, onLedChange);
  ArduinoCloud.addProperty(luminosite, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(co2, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(direction, READWRITE, ON_CHANGE, onDirectionChange);
  ArduinoCloud.addProperty(ledDisplayOption, READWRITE, ON_CHANGE, onLedDisplayOptionChange);
  ArduinoCloud.addProperty(minWakeTime, READWRITE, ON_CHANGE, onMinWakeTimeChange);
  ArduinoCloud.addProperty(sleepDuration, READWRITE, ON_CHANGE, onSleepDurationChange);
  ArduinoCloud.addProperty(uv, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(altitude, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(position, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(batterie, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(humidite, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(pression, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(disableWiFi, READWRITE, ON_CHANGE, onDisableWiFiChange);
  ArduinoCloud.addProperty(isAwake, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(keepAwake, READWRITE, ON_CHANGE, onKeepAwakeChange);
  ArduinoCloud.addProperty(temperature, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(sleepStartTime, READ, ON_CHANGE, NULL);



}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
